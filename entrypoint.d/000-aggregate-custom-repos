#!/usr/bin/env python
# -*- coding: utf-8 -*-
from multiprocessing import cpu_count
import os
import shutil
from subprocess import check_call

import logging

import yaml
_logger = logging.getLogger(__name__)

# Recreate and run git-aggregator
SOURCES = os.environ.get('SOURCES')
RESOURCES = os.environ.get('RESOURCES')
REPOS_YAML = os.environ.get('REPOS_YAML')

if REPOS_YAML and SOURCES:
    content = REPOS_YAML
    repos_file = os.path.join(RESOURCES, "custom-repos.yml")
    with open(repos_file, 'w+') as file:
        file.write(content)

    _logger.info('Running git aggregator on custom-repos.yml..')

    output = os.path.join(SOURCES, 'repositories')
    with open(repos_file) as yaml_file:
        for doc in yaml.safe_load_all(yaml_file):
            for repo in doc:
                repo_path = os.path.abspath(os.path.join(output, repo))
                print(repo_path)
                if os.path.exists(repo_path) and os.path.isdir(repo_path):
                    shutil.rmtree(repo_path)

    try:
        check_call([
            "gitaggregate",
            "--expand-env",
            "--config",
            os.path.abspath(repos_file),
            "--jobs",
            str(cpu_count() or 1),
            "aggregate",
        ])
    except Exception as e:
        _logger.error("IMPORTANT! Couldn't run gitaggregate correctly. This is what we get: %s" % e)
